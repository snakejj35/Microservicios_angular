package com.formacionbdi.microservicios.app.usuarios.controller;

import java.util.Optional;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.formacionbdi.microservicios.app.usuarios.service.IAlumnoService;
import com.formacionbdi.microservicios.common.controllers.CommonController;
import com.formacionbdi.microservicios.commons.alumnos.models.entity.Alumno;

@RestController
public class AlumnoController extends CommonController<Alumno, IAlumnoService>{
	
	@PutMapping("/{id}")
	public ResponseEntity<?> editar(@Valid @RequestBody Alumno alumno, @PathVariable Long id, BindingResult result) {
		if(result.hasErrors()) {
			return this.validar(result);
		}
		
		Optional<Alumno> optionalAlumno = service.finById(id);
		if(!optionalAlumno.isPresent()) {
			return ResponseEntity.notFound().build();  //Construye la respuesta para un notfound 404
		}
		
		Alumno alumnoDB = optionalAlumno.get();
		alumnoDB.setNombre(alumno.getNombre());
		alumnoDB.setApellido(alumno.getApellido());
		alumnoDB.setEmail(alumno.getEmail());
		return ResponseEntity.status(HttpStatus.CREATED).body(service.save(alumnoDB));
	}
	
	@GetMapping("/filtrar/{term}")
	public ResponseEntity<?> filtrar(@PathVariable String term) {
		return ResponseEntity.ok(service.findByNombreApellido(term));
	}
}
